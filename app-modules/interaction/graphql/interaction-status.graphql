type InteractionStatus
    @model(class: "AdvisingApp\\Interaction\\Models\\InteractionStatus") {
    "Unique primary key."
    id: ID!

    "The name of the interaction driver."
    name: String!

    "Interactions related to this interaction driver."
    interactions: [Interaction!] @hasMany

    "The color of the interaction driver."
    color: InteractionStatusColorOptions!

    "The created date of the interaction driver."
    created_at: DateTime

    "The updated date of the interaction driver."
    updated_at: DateTime

    "The deleted date of the interaction driver."
    deleted_at: DateTime
}

# TODO: Mutate

input InteractionStatusesQuery {
    "The name of the interaction status."
    name: String

    "The color of the interaction status."
    color: InteractionStatusColorOptions
}

extend type Query {
    "Find a single interaction status by an identifying attribute."
    interaction(
        "The value of the attribute to match."
        id: ID @eq @rules(apply: ["prohibits:name", "required_without:name"])

        "The name of the interaction status."
        name: String @eq @rules(apply: ["prohibits:id", "required_without:id"])
    ): Interaction @find @canResolved(ability: "view")

    "Get all interaction statuses."
    interactionStatuses(
        where: InteractionStatusesQuery @searchBy
    ): [InteractionStatus!]! @paginate @canModel(ability: "viewAny")
}
