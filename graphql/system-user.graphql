type SystemUser @model(class: "App\\Models\\SystemUser") {
    "Unique primary key."
    id: UUID!

    name: String!

    audits: [Audit!] @hasMany

    created_at: DateTime

    updated_at: DateTime

    deleted_at: DateTime
}

input SystemUsersQuery {
    id: UUID

    name: String

    audits: AuditsQuery

    created_at: DateTime

    updated_at: DateTime

    deleted_at: DateTime
}

type SystemUserQueries {
    find(
        id: UUID!
            @whereKey
            @rules(apply: ["required", "uuid", "exists:system_users"])
    ): SystemUser @find @canResolved(ability: "view")

    list(where: SystemUsersQuery @searchBy): [SystemUser!]!
        @paginate
        @canModel(ability: "viewAny")
}

extend type Query {
    systemUser: SystemUserQueries! @namespaced
}
